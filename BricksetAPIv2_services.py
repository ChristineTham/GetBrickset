################################################## 
# BricksetAPIv2_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from BricksetAPIv2_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class BricksetAPIv2Locator:
    BricksetAPIv2Soap_address = "http://brickset.com/api/v2.asmx"
    def getBricksetAPIv2SoapAddress(self):
        return BricksetAPIv2Locator.BricksetAPIv2Soap_address
    def getBricksetAPIv2Soap(self, url=None, **kw):
        return BricksetAPIv2SoapSOAP(url or BricksetAPIv2Locator.BricksetAPIv2Soap_address, **kw)

# Methods
class BricksetAPIv2SoapSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: getSets
    def getSets(self, request):
        if isinstance(request, getSetsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getSets", **kw)
        # no output wsaction
        response = self.binding.Receive(getSetsSoapOut.typecode)
        return response

    # op: getSet
    def getSet(self, request):
        if isinstance(request, getSetSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getSet", **kw)
        # no output wsaction
        response = self.binding.Receive(getSetSoapOut.typecode)
        return response

    # op: getRecentlyUpdatedSets
    def getRecentlyUpdatedSets(self, request):
        if isinstance(request, getRecentlyUpdatedSetsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getRecentlyUpdatedSets", **kw)
        # no output wsaction
        response = self.binding.Receive(getRecentlyUpdatedSetsSoapOut.typecode)
        return response

    # op: getAdditionalImages
    def getAdditionalImages(self, request):
        if isinstance(request, getAdditionalImagesSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getAdditionalImages", **kw)
        # no output wsaction
        response = self.binding.Receive(getAdditionalImagesSoapOut.typecode)
        return response

    # op: getReviews
    def getReviews(self, request):
        if isinstance(request, getReviewsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getReviews", **kw)
        # no output wsaction
        response = self.binding.Receive(getReviewsSoapOut.typecode)
        return response

    # op: getInstructions
    def getInstructions(self, request):
        if isinstance(request, getInstructionsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getInstructions", **kw)
        # no output wsaction
        response = self.binding.Receive(getInstructionsSoapOut.typecode)
        return response

    # op: getMinifigCollection
    def getMinifigCollection(self, request):
        if isinstance(request, getMinifigCollectionSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getMinifigCollection", **kw)
        # no output wsaction
        response = self.binding.Receive(getMinifigCollectionSoapOut.typecode)
        return response

    # op: getThemes
    def getThemes(self, request):
        if isinstance(request, getThemesSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getThemes", **kw)
        # no output wsaction
        response = self.binding.Receive(getThemesSoapOut.typecode)
        return response

    # op: getSubthemes
    def getSubthemes(self, request):
        if isinstance(request, getSubthemesSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getSubthemes", **kw)
        # no output wsaction
        response = self.binding.Receive(getSubthemesSoapOut.typecode)
        return response

    # op: getYears
    def getYears(self, request):
        if isinstance(request, getYearsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getYears", **kw)
        # no output wsaction
        response = self.binding.Receive(getYearsSoapOut.typecode)
        return response

    # op: getThemesForUser
    def getThemesForUser(self, request):
        if isinstance(request, getThemesForUserSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getThemesForUser", **kw)
        # no output wsaction
        response = self.binding.Receive(getThemesForUserSoapOut.typecode)
        return response

    # op: getSubthemesForUser
    def getSubthemesForUser(self, request):
        if isinstance(request, getSubthemesForUserSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getSubthemesForUser", **kw)
        # no output wsaction
        response = self.binding.Receive(getSubthemesForUserSoapOut.typecode)
        return response

    # op: getYearsForUser
    def getYearsForUser(self, request):
        if isinstance(request, getYearsForUserSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getYearsForUser", **kw)
        # no output wsaction
        response = self.binding.Receive(getYearsForUserSoapOut.typecode)
        return response

    # op: getUserNotes
    def getUserNotes(self, request):
        if isinstance(request, getUserNotesSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getUserNotes", **kw)
        # no output wsaction
        response = self.binding.Receive(getUserNotesSoapOut.typecode)
        return response

    # op: getCollectionTotals
    def getCollectionTotals(self, request):
        if isinstance(request, getCollectionTotalsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getCollectionTotals", **kw)
        # no output wsaction
        response = self.binding.Receive(getCollectionTotalsSoapOut.typecode)
        return response

    # op: setCollection
    def setCollection(self, request):
        if isinstance(request, setCollectionSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/setCollection", **kw)
        # no output wsaction
        response = self.binding.Receive(setCollectionSoapOut.typecode)
        return response

    # op: setCollection_owns
    def setCollection_owns(self, request):
        if isinstance(request, setCollection_ownsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/setCollection_owns", **kw)
        # no output wsaction
        response = self.binding.Receive(setCollection_ownsSoapOut.typecode)
        return response

    # op: setCollection_wants
    def setCollection_wants(self, request):
        if isinstance(request, setCollection_wantsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/setCollection_wants", **kw)
        # no output wsaction
        response = self.binding.Receive(setCollection_wantsSoapOut.typecode)
        return response

    # op: setCollection_userNotes
    def setCollection_userNotes(self, request):
        if isinstance(request, setCollection_userNotesSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/setCollection_userNotes", **kw)
        # no output wsaction
        response = self.binding.Receive(setCollection_userNotesSoapOut.typecode)
        return response

    # op: setCollection_qtyOwned
    def setCollection_qtyOwned(self, request):
        if isinstance(request, setCollection_qtyOwnedSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/setCollection_qtyOwned", **kw)
        # no output wsaction
        response = self.binding.Receive(setCollection_qtyOwnedSoapOut.typecode)
        return response

    # op: setMinifigCollection
    def setMinifigCollection(self, request):
        if isinstance(request, setMinifigCollectionSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/setMinifigCollection", **kw)
        # no output wsaction
        response = self.binding.Receive(setMinifigCollectionSoapOut.typecode)
        return response

    # op: login
    def login(self, request):
        if isinstance(request, loginSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/login", **kw)
        # no output wsaction
        response = self.binding.Receive(loginSoapOut.typecode)
        return response

    # op: setCollectionDetail
    def setCollectionDetail(self, request):
        if isinstance(request, setCollectionDetailSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/setCollectionDetail", **kw)
        # no output wsaction
        response = self.binding.Receive(setCollectionDetailSoapOut.typecode)
        return response

    # op: getCollectionDetail
    def getCollectionDetail(self, request):
        if isinstance(request, getCollectionDetailSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getCollectionDetail", **kw)
        # no output wsaction
        response = self.binding.Receive(getCollectionDetailSoapOut.typecode)
        return response

    # op: getCollectionDetailConditions
    def getCollectionDetailConditions(self, request):
        if isinstance(request, getCollectionDetailConditionsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/getCollectionDetailConditions", **kw)
        # no output wsaction
        response = self.binding.Receive(getCollectionDetailConditionsSoapOut.typecode)
        return response

    # op: checkKey
    def checkKey(self, request):
        if isinstance(request, checkKeySoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://brickset.com/api/checkKey", **kw)
        # no output wsaction
        response = self.binding.Receive(checkKeySoapOut.typecode)
        return response

getSetsSoapIn = ns0.getSets_Dec().pyclass

getSetsSoapOut = ns0.getSetsResponse_Dec().pyclass

getSetSoapIn = ns0.getSet_Dec().pyclass

getSetSoapOut = ns0.getSetResponse_Dec().pyclass

getRecentlyUpdatedSetsSoapIn = ns0.getRecentlyUpdatedSets_Dec().pyclass

getRecentlyUpdatedSetsSoapOut = ns0.getRecentlyUpdatedSetsResponse_Dec().pyclass

getAdditionalImagesSoapIn = ns0.getAdditionalImages_Dec().pyclass

getAdditionalImagesSoapOut = ns0.getAdditionalImagesResponse_Dec().pyclass

getReviewsSoapIn = ns0.getReviews_Dec().pyclass

getReviewsSoapOut = ns0.getReviewsResponse_Dec().pyclass

getInstructionsSoapIn = ns0.getInstructions_Dec().pyclass

getInstructionsSoapOut = ns0.getInstructionsResponse_Dec().pyclass

getMinifigCollectionSoapIn = ns0.getMinifigCollection_Dec().pyclass

getMinifigCollectionSoapOut = ns0.getMinifigCollectionResponse_Dec().pyclass

getThemesSoapIn = ns0.getThemes_Dec().pyclass

getThemesSoapOut = ns0.getThemesResponse_Dec().pyclass

getSubthemesSoapIn = ns0.getSubthemes_Dec().pyclass

getSubthemesSoapOut = ns0.getSubthemesResponse_Dec().pyclass

getYearsSoapIn = ns0.getYears_Dec().pyclass

getYearsSoapOut = ns0.getYearsResponse_Dec().pyclass

getThemesForUserSoapIn = ns0.getThemesForUser_Dec().pyclass

getThemesForUserSoapOut = ns0.getThemesForUserResponse_Dec().pyclass

getSubthemesForUserSoapIn = ns0.getSubthemesForUser_Dec().pyclass

getSubthemesForUserSoapOut = ns0.getSubthemesForUserResponse_Dec().pyclass

getYearsForUserSoapIn = ns0.getYearsForUser_Dec().pyclass

getYearsForUserSoapOut = ns0.getYearsForUserResponse_Dec().pyclass

getUserNotesSoapIn = ns0.getUserNotes_Dec().pyclass

getUserNotesSoapOut = ns0.getUserNotesResponse_Dec().pyclass

getCollectionTotalsSoapIn = ns0.getCollectionTotals_Dec().pyclass

getCollectionTotalsSoapOut = ns0.getCollectionTotalsResponse_Dec().pyclass

setCollectionSoapIn = ns0.setCollection_Dec().pyclass

setCollectionSoapOut = ns0.setCollectionResponse_Dec().pyclass

setCollection_ownsSoapIn = ns0.setCollection_owns_Dec().pyclass

setCollection_ownsSoapOut = ns0.setCollection_ownsResponse_Dec().pyclass

setCollection_wantsSoapIn = ns0.setCollection_wants_Dec().pyclass

setCollection_wantsSoapOut = ns0.setCollection_wantsResponse_Dec().pyclass

setCollection_userNotesSoapIn = ns0.setCollection_userNotes_Dec().pyclass

setCollection_userNotesSoapOut = ns0.setCollection_userNotesResponse_Dec().pyclass

setCollection_qtyOwnedSoapIn = ns0.setCollection_qtyOwned_Dec().pyclass

setCollection_qtyOwnedSoapOut = ns0.setCollection_qtyOwnedResponse_Dec().pyclass

setMinifigCollectionSoapIn = ns0.setMinifigCollection_Dec().pyclass

setMinifigCollectionSoapOut = ns0.setMinifigCollectionResponse_Dec().pyclass

loginSoapIn = ns0.login_Dec().pyclass

loginSoapOut = ns0.loginResponse_Dec().pyclass

setCollectionDetailSoapIn = ns0.setCollectionDetail_Dec().pyclass

setCollectionDetailSoapOut = ns0.setCollectionDetailResponse_Dec().pyclass

getCollectionDetailSoapIn = ns0.getCollectionDetail_Dec().pyclass

getCollectionDetailSoapOut = ns0.getCollectionDetailResponse_Dec().pyclass

getCollectionDetailConditionsSoapIn = ns0.getCollectionDetailConditions_Dec().pyclass

getCollectionDetailConditionsSoapOut = ns0.getCollectionDetailConditionsResponse_Dec().pyclass

checkKeySoapIn = ns0.checkKey_Dec().pyclass

checkKeySoapOut = ns0.checkKeyResponse_Dec().pyclass
